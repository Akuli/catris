# Edit /etc/nginx/nginx.conf:
#   - uncomment "server_tokens off;"
#   - change access_log config to:
#
#        log_format hideUserIpsLogFormat '$remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
#        access_log /var/log/nginx/access.log hideUserIpsLogFormat;
#
# sudo apt install nginx
# sudo rm /etc/nginx/modules-enabled/*
# sudo rm /etc/nginx/sites-enabled/default
# sudo rm /var/www/html/index.nginx-debian.html
# sudo chown -R aku:aku /var/www/html/
# sudo cp catris-nginx-site /etc/nginx/sites-available/
# sudo ln -s /etc/nginx/sites-{available,enabled}/catris-nginx-site
# sudo systemctl restart nginx

server {
	listen 443 ssl so_keepalive=1m:5s:5;
	listen [::]:443 ssl so_keepalive=1m:5s:5 ipv6only=on;

	server_name catris.net; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/catris.net/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/catris.net/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	root /var/www/html;
	index index.html;

	location /websocket {
		# Redirect to backend listening on localhost only.
		# https://www.nginx.com/blog/websocket-nginx/
		proxy_pass http://localhost:54321/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_read_timeout 11m;  # backend closes after 10min inactive
	}

	location / {
		# Serve static files.
		try_files $uri $uri/ =404;
		add_header Cache-Control no-cache;
		add_header Last-Modified "";
		etag off;
	}
}

# Redirect to https from port 80
server {
	listen 80 so_keepalive=1m:5s:5;
	listen [::]:80 so_keepalive=1m:5s:5 ipv6only=on;
	# Hard-coded domain name in case someone connects with server IP.
	# This was the only way to connect before I bought the domain.
	# No longer good, because https only works if you use the domain name when connecting.
	return 302 https://catris.net$request_uri;
}
